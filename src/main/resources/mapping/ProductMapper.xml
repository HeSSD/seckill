<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.seckill.domain.mapper.ProductMapper" >
  <resultMap id="BaseResultMap" type="com.example.seckill.domain.model.Product" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="number" property="number" jdbcType="INTEGER" />
    <result column="flag" property="flag" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="seckill_price" property="seckillPrice" jdbcType="INTEGER" />
    <result column="seckill_number" property="seckillNumber" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, title, price, number, flag, status, seckill_price, seckill_number
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sk_product
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sk_product
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.seckill.domain.model.Product" >
    insert into sk_product (id, title, price, 
      number, flag, status, 
      seckill_price, seckill_number)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, 
      #{number,jdbcType=INTEGER}, #{flag,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{seckillPrice,jdbcType=INTEGER}, #{seckillNumber,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.seckill.domain.model.Product" >
    insert into sk_product
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="flag != null" >
        flag,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="seckillPrice != null" >
        seckill_price,
      </if>
      <if test="seckillNumber != null" >
        seckill_number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="number != null" >
        #{number,jdbcType=INTEGER},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="seckillPrice != null" >
        #{seckillPrice,jdbcType=INTEGER},
      </if>
      <if test="seckillNumber != null" >
        #{seckillNumber,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

  <update id="upStatusOrSeckill" parameterType="com.example.seckill.domain.model.Product">
    update sk_product set
    status = #{status}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateByPrimaryKeySelective" parameterType="com.example.seckill.domain.model.Product" >
    update sk_product
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="flag != null" >
        flag = #{flag,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="seckillPrice != null" >
        seckill_price = #{seckillPrice,jdbcType=INTEGER},
      </if>
      <if test="seckillNumber != null" >
        seckill_number = #{seckillNumber,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.seckill.domain.model.Product" >
    update sk_product
    set title = #{title,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      number = #{number,jdbcType=INTEGER},
      flag = #{flag,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      seckill_price = #{seckillPrice,jdbcType=INTEGER},
      seckill_number = #{seckillNumber,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
